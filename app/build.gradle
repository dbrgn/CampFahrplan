apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        versionCode 1
        versionName "1.0.0"
        minSdkVersion 14
        targetSdkVersion 25
        archivesBaseName = "Fahrplan-$versionName"

        // Build information
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""

        vectorDrawables.useSupportLibrary = true

        // Streaming media API configuration
        buildConfigField "String", "STREAMING_API_BASE_URL_DEBUG",
                "\"https://gist.githubusercontent.com\""
        buildConfigField "String", "STREAMING_API_OFFERS_PATH_DEBUG",
                "\"johnjohndoe/617bbfa2ac36f5148a049548b419e299/raw/a3a529b79958de03603c9d9218bbf28e40099e1f/streams-v2.json\""
        buildConfigField "String", "STREAMING_API_BASE_URL",
                "\"https://streaming.media.ccc.de\""
        buildConfigField "String", "STREAMING_API_OFFERS_PATH",
                "\"/streams/v2.json\""
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"
            zipAlignEnabled true
            debuggable true
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    productFlavors {
        zeteco {
            applicationId "org.ligi.fahrplan"
            buildConfigField "String", "SCHEDULE_URL", '"https://fahrplan.zeteco.ch/schedule.xml"'
            buildConfigField "String", "SCHEDULE_DOMAIN_PART", '"https://fahrplan.zeteco.ch"'
            buildConfigField "String", "SCHEDULE_EVENT_PART", '"/events/%1$s.html"'
            buildConfigField "String", "SCHEDULE_PART", '""'
            buildConfigField "String", "VENUE", '"Griesbach Schaffhausen"'
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_YEAR", "2017"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_MONTH", "7"
            buildConfigField "int", "SCHEDULE_FIRST_DAY_START_DAY", "21"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_YEAR", "2017"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_MONTH", "7"
            buildConfigField "int", "SCHEDULE_LAST_DAY_END_DAY", "24"
            buildConfigField "String", "SCHEDULE_FEEDBACK_URL", '"https://fahrplan.zeteco.ch/%s/feedback/new"'
        }
    }

    lintOptions {
        // for okio - https://github.com/square/okio/issues/58
        warning "InvalidPackage"
    }
}

ext {
    okHttpVersion = "3.5.0"
    picassoVersion = "2.5.2"
}

dependencies {
    compile "com.android.support:appcompat-v7:25.1.0"
    compile "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-runtime:$kotlin_version"
    compile 'com.github.ligi:ExtraCompats:0.4'
    compile "com.github.johnjohndoe:Brockman:b6cd736ab0a5882b2251b0a62b92f0e69f09827d"
    compile "com.squareup.picasso:picasso:${picassoVersion}"

    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.assertj:assertj-android:1.1.1'
    testCompile 'com.android.support:support-annotations:25.1.0'
    testCompile 'org.mockito:mockito-core:2.0.0-beta.117'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

def gitSha() {
    def res = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
    def diff = 'git diff'.execute([], project.rootDir).text.trim()
    if (diff != null && diff.length() > 0) {
        res += "-dirty"
    }
    return res
}

def buildTime() {
    return new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
}
